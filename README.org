* cred

[[file:img/with-cursors.png]]

/Canvas Rendered EDitor/

* Why
There are [[https://github.com/showcases/text-editors][text editors]] already, [[http://thomaswilburn.net/caret/][even for Chrome OS]].  Why another?

- learn from other implementations (Spacemacs, Ace, Sublime Text, etc.)
- unique rendering mode
- reinvent +ALL+ Some of the wheels!
- but really: Spacemacs for the web
  
* Features
...in various amounts of implementation

** render to HTML5 canvas
This [[http://stackoverflow.com/a/12437275/2037637][may be crazy]].  But it's part of the acronym, so it stays.

** game loop: separate concerns, smooth UI
- =while(true){input(),logic(),render()}=
- service =inputs= immediately
- update =logic= at fixed time steps for smoother animations
- =render= webGL possible; 2d still offers finer grained control and faster redraws than DOM

** layered, modal, keyboard-driven input
- =normal=, =insert=, =visual= modes like Vim
- popup mini-modes like Spacemacs

* Contributing
Fork/pull if you want to contribute.

** License
License is [[http://unlicense.org/][the unlicense]], which is about as permissive as I've found while still looking official.

** Code Style
Some inspiration comes from this [[http://nsl.com/papers/style.pdf][K style guide]]. Other (not very strict) conventions include:

- ALL_CAPS_CONSTANTS
- ProperCamelCaseClasses
- rarely_used_name_snake_case
- cu // commonly used name with a comment
- 4-space indentation
- "complete thoughts" short enough to fit on 1 line /should/ only take 1 line

* Links
** overall architectural-type things

- [[https://github.com/creationix/tedit][tedit - IDE that directly edits Git repos (really impressive concepts here!)]]
- [[https://github.com/martanne/vis#operators][vis feature set]]
- [[http://vimsheet.com/][vim command cheatsheet]]
- [[http://www.isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing][robust game loops]]
- [[http://cryto.net/~joepie91/blog/2015/05/04/functional-programming-in-javascript-map-filter-reduce/][functional javascript]]

** text-editor-specific things

- [[http://www.catch22.net/tuts/piece-chains][piece tables in windows text editors]]
- [[http://www.codeproject.com/Articles/20910/Generic-Gap-Buffer][gap buffer in C#]]
- [[https://www.common-lisp.net/project/flexichain/download/StrandhVilleneuveMoore.pdf][circular gap buffer 'flexichain']]
- [[https://github.com/jaz303/gapbuffer/blob/master/index.js][gap buffer in Node.js]]
- [[https://news.ycombinator.com/item?id=11244103][yc on this subject]]
