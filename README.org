* cred ([[http://alexshroyer.com/cred][demo]])

[[file:img/with-cursors.png]]

/Canvas Rendered EDitor/

* Why
There are [[https://github.com/showcases/text-editors][text editors]] already, [[http://thomaswilburn.net/caret/][even for Chrome OS]].  Why another?

The primary goal of Cred is to offer a Spacemacs-like UI in a web-native package.  This means it can run on an unmodified Chromebook, or even as a static web site.  This entails some trade-offs:

- sandboxed app has no access to other programs (e.g. a shell)
- no millions of developer-hours already invested in features and debugging

...but also affords some interesting features not feasible (or awkward) for an app with terminal heritage:

- fonts besides monospace
- inline font styles
- images, audio, video
- mouse integration
  
** Completed Features

- scrolling via keyboard or mouse
- many normal-mode motions (forward-paragraph, backward-word, etc.)
- tokenize multi-part commands (e.g. =12ya)=)
- persistent in-memory data structure for per-buffer editing history
- draw text without perceptible lag

** Todos

- parse multi-part commands
- visual mode
- text object spans (e.g. =daw= should delete an entire word touching the cursor, even if the cursor is in the middle of the word)
  
* Contributing
Fork/pull if you want to contribute.

** License
License is [[http://unlicense.org/][the unlicense]], which is about as permissive as I've found while still looking official.

** Code Style
Some inspiration comes from this [[http://nsl.com/papers/style.pdf][K style guide]]. Other (not very strict) conventions include:

- CONSTANT_SHOUTING
- ProperNameClasses
- rarely_used_name
- cu // commonly used name with a comment
- 4-space indentation
- always use braces ={}= and semicolons =;= to reduce JavaScript decision fatigue
- "complete thoughts" which are /short enough/ (about 2/3 of a Tweet, max) go on one line

* Links
** general

- [[https://github.com/creationix/tedit][tedit - IDE that directly edits Git repos (really impressive concepts here!)]]
- [[https://github.com/martanne/vis#operators][vis feature set]]
- [[http://vimsheet.com/][vim command cheatsheet]]
- [[http://www.isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing][robust game loops]]
- [[http://cryto.net/~joepie91/blog/2015/05/04/functional-programming-in-javascript-map-filter-reduce/][functional javascript]]

** specific

- [[https://takac.github.io/][vim grammar]]
- [[http://www.catch22.net/tuts/piece-chains][piece tables in windows text editors]]
- [[http://www.codeproject.com/Articles/20910/Generic-Gap-Buffer][gap buffer in C#]]
- [[https://www.common-lisp.net/project/flexichain/download/StrandhVilleneuveMoore.pdf][circular gap buffer 'flexichain']]
- [[https://github.com/jaz303/gapbuffer/blob/master/index.js][gap buffer in Node.js]]
- [[https://news.ycombinator.com/item?id=11244103][yc on this subject]]
  
