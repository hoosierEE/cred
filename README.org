* cred ([[http://alexshroyer.com/cred][demo]])

[[file:img/with-cursors.png]]

/Canvas Rendered EDitor/

* Why
There are [[https://github.com/showcases/text-editors][text editors]] already, [[http://thomaswilburn.net/caret/][even for Chrome OS]].  Why another?

Personally I find the user interface of Vim (and by extension Spacemacs) to be very pleasing to use.  I want to create an application that captures some of my favorite features from Vim and Spacemacs, but runs natively on a Chromebook, which means JavaScript.

I also want to become more familiar with modern (ES6) JavaScript features, and explore potential solutions to some of the limitations imposed by the browser environment.  In particular, file i/o is handled very differently in browsers compared to "native" applications.

There are also some features of the more mainstream WYSIWYG editors that I enjoy, such as

- fonts besides monospace
- different font styles
- inline images
- mouse integration

This means a terminal-based editor is not going to work for me, at least not well.

Finally, there are a number of interesting problems that need to be solved when writing a Vim-like text editor, such as:

- parse grammar of multi-part editing commands
- persistent in-memory data structure for per-buffer editing history
- draw text without perceptible lag
  
* Contributing
Fork/pull if you want to contribute.

** License
License is [[http://unlicense.org/][the unlicense]], which is about as permissive as I've found while still looking official.

** Code Style
Some inspiration comes from this [[http://nsl.com/papers/style.pdf][K style guide]]. Other (not very strict) conventions include:

- CONSTANT_SHOUTING
- ProperNameClasses
- rarely_used_name
- cu // commonly used name with a comment
- 4-space indentation
- always use braces ={}= and semicolons =;= to reduce JavaScript decision fatigue
- "complete thoughts" which are /short enough/ (about 2/3 of a Tweet, max) go on one line

* Links
** general

- [[https://github.com/creationix/tedit][tedit - IDE that directly edits Git repos (really impressive concepts here!)]]
- [[https://github.com/martanne/vis#operators][vis feature set]]
- [[http://vimsheet.com/][vim command cheatsheet]]
- [[http://www.isaacsukin.com/news/2015/01/detailed-explanation-javascript-game-loops-and-timing][robust game loops]]
- [[http://cryto.net/~joepie91/blog/2015/05/04/functional-programming-in-javascript-map-filter-reduce/][functional javascript]]

** specific

- [[https://takac.github.io/][vim grammar]]
- [[http://www.catch22.net/tuts/piece-chains][piece tables in windows text editors]]
- [[http://www.codeproject.com/Articles/20910/Generic-Gap-Buffer][gap buffer in C#]]
- [[https://www.common-lisp.net/project/flexichain/download/StrandhVilleneuveMoore.pdf][circular gap buffer 'flexichain']]
- [[https://github.com/jaz303/gapbuffer/blob/master/index.js][gap buffer in Node.js]]
- [[https://news.ycombinator.com/item?id=11244103][yc on this subject]]
  
